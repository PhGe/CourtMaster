name: Build and Deploy

on: [push]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  API_BASE_URL: ${{ secrets.API_BASE_URL }}
  VAR_BASE_URL: ${{ vars.API_BASE_URL }}

jobs:
  
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    environment: Production

    steps:
    - name: Debug API_BASE_URL
      run: echo "$API_BASE_URL , $DATABASE_URL"
    
    - name: Debug API_BASE_URL
      run: echo `${{ secrets.API_BASE_URL }}`
    
    - name: Debug API_BASE_URL
      run: echo "API_BASE_URL = $API_BASE_URL"
    
    - name: Debug VAR_BASE_URL
      run: echo "VAR_BASE_URL = $VAR_BASE_URL"

    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./
        destination: ./_site

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        name: dist
        path: ./dist

  deploy-development:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Deploy to GitHub Pages - Development
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: dist
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}

    environment:
      name: development
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

  run-tests:
    needs: [deploy-development]
    
    environment:
      name: testing
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      API_BASE_URL: ${{ secrets.API_BASE_URL }}


    runs-on: ubuntu-latest
    steps: 

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Init Playwright
        run: npm init playwright@latest

      - name: Install Playwright/test
        run:  npm install --save-dev @playwright/test

      - name: Install Playwright Browser
        run: npx playwright install

      - name: Install Dependencies for Jest
        run: npm install jest @types/jest

      - name: Run Playwright Tests
        run: npx playwright test tests/playwright --trace on

      - name: Run Jest Tests
        run: npm test

      - name: Upload Trace File
        uses: actions/upload-artifact@v2
        with:
          name: trace
          path: test-results
        if: failure()

      - name: Cleanup
        run: rm -rf node_modules
          
  deploy-production:
        needs: [run-tests]
        runs-on: ubuntu-latest
        needs: build
        steps:
          - name: Deploy to GitHub Pages - Production
            id: deployment
            uses: actions/deploy-pages@v2
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
              artifact_name: dist
            env:
              API_BASE_URL: ${{ secrets.API_BASE_URL }}
              Var_BASE_URL: ${{ vars.API_BASE_URL }}
              DATABASE_URL: ${{ secrets.DATABASE_URL }}
          - name: Echo URL and Database URL
            run: echo "API_BASE_URL = $API_BASE_URL , DATABASE_URL = $DATABASE_URL, Var_BASE_URL = $Var_BASE_URL"
          
    
        environment:
          name: production
          url: ${{ steps.deployment.outputs.page_url }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          run: echo "API_BASE_URL = $API_BASE_URL , DATABASE_URL = $DATABASE_URL, Var_BASE_URL = $Var_BASE_URL"
    